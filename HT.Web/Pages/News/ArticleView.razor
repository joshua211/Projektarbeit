@page "/news/view/{ArticleId}"

<AsyncResultHandler Result="serviceResult">
    <ReturnAppbar ReturnTo="news" AppbarTitle="Artikel ansehen">
        <Actions>
            @if (ContextProvider.GetUserContext().IsEditor)
            {
                <MatIconButton OnClick="Edit" Icon="@MatIconNames.Edit"></MatIconButton>
                <MatIconButton OnClick="Delete" Icon="@MatIconNames.Delete"></MatIconButton>
                <MatIconButton OnClick="ChangeVisibility" Icon="@(readModel.IsVisible ? MatIconNames.Visibility : MatIconNames.Visibility_off)"/>
            }
            @*<DocumentSubscriptionButton AsIcon="true" DocumentId="@readModel.Id"/>*@

        </Actions>
        <ChildContent>

                <MatAppBarContent Class="min-w-screen min-h-screen flex justify-center">
                    @{
                        var rev = readModel.CurrentRevision;
                        <MatPaper Class="h-full p-4 flex flex-col w-full md:w-3/4 max-w-screen" Elevation="1">
                            <MatH4 Class="mt-5 break-all">@rev.Title</MatH4>
                            <MatSubtitle2>Zuletzt bearbeitet am @rev.Date.ToLocalTime().ToString("f") von @rev.UserContext.DisplayName</MatSubtitle2>
                            <MatDivider/>
                            <div class="mt-3 revert break-all">
                                @((MarkupString)rev.Content)
                            </div>
                        </MatPaper>
                    }
                </MatAppBarContent>
        </ChildContent>
    </ReturnAppbar>
</AsyncResultHandler>